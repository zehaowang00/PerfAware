{
    "performance_sensitive": "No",
    "config_name": "createMipMapInsteadOfDrawableDir",
    "messages": [
        {
            "sender": "System",
            "content": "Initialize the analysis for the target system and configuration."
        },
        {
            "sender": "Developer",
            "content": "public static List<AndroidDensityDescriptor> getAndroidDensityDescriptors(Arguments arguments) {\n        List<AndroidDensityDescriptor> list = new ArrayList<>();\n        String dirPrefix = arguments.createMipMapInsteadOfDrawableDir ? \"mipmap\" : \"drawable\";\n        if (arguments.includeAndroidLdpiTvdpi) {\n            list.add(new AndroidDensityDescriptor(0.75f, \"ldpi\", dirPrefix + \"-ldpi\"));\n            list.add(new AndroidDensityDescriptor(1.33f, \"tvdpi\", dirPrefix + \"-tvdpi\"));\n        }\n        list.add(new AndroidDensityDescriptor(1, \"mdpi\", dirPrefix + \"-mdpi\"));\n        list.add(new AndroidDensityDescriptor(1.5f, \"hdpi\", dirPrefix + \"-hdpi\"));\n        list.add(new AndroidDensityDescriptor(2, \"xhdpi\", dirPrefix + \"-xhdpi\"));\n        list.add(new AndroidDensityDescriptor(3, \"xxhdpi\", dirPrefix + \"-xxhdpi\"));\n        list.add(new AndroidDensityDescriptor(4, \"xxxhdpi\", dirPrefix + \"-xxxhdpi\"));\n        return list;\n    }\n\n    \nprivate void loadPrefs() {\n        Arguments args = preferenceStore.get();\n        if (args != null) {\n            textFieldSrcPath.setText(args.src != null ? args.src.getAbsolutePath() : \"\");\n            textFieldDstPath.setText(args.dst != null ? args.dst.getAbsolutePath() : \"\");\n\n            scaleSlider.setValue(Arguments.DEFAULT_SCALE);\n            textFieldDp.setText(String.valueOf((int) args.scale));\n\n            if (args.scaleMode == EScaleMode.FACTOR) {\n                rbFactor.setSelected(true);\n                scaleSlider.setValue(args.scale);\n                textFieldDp.setText(\"\");\n            } else if (args.scaleMode == EScaleMode.DP_WIDTH) {\n                rbDpWidth.setSelected(true);\n            } else if (args.scaleMode == EScaleMode.DP_HEIGHT) {\n                rbDpHeight.setSelected(true);\n            }\n\n            setPlatformToogles(args.platform);\n            choiceCompression.getSelectionModel().select(args.outputCompressionMode);\n            choiceCompressionQuality.getSelectionModel().select(toJpgQ(args.compressionQuality));\n            choiceRounding.getSelectionModel().select(args.roundingHandler);\n            choiceThreads.getSelectionModel().select(Integer.valueOf(args.threadCount));\n            choiceDownScale.getSelectionModel().select(args.downScalingAlgorithm);\n            choiceUpScale.getSelectionModel().select(args.upScalingAlgorithm);\n\n            cbSkipExisting.setSelected(args.skipExistingFiles);\n            cbSkipUpscaling.setSelected(args.skipUpscaling);\n            cbAndroidIncludeLdpiTvdpi.setSelected(args.includeAndroidLdpiTvdpi);\n            cbAntiAliasing.setSelected(args.enableAntiAliasing);\n            cbMipmapInsteadDrawable.setSelected(args.createMipMapInsteadOfDrawableDir);\n            cbHaltOnError.setSelected(args.haltOnError);\n            cbDryRun.setSelected(args.dryRun);\n            cbEnablePngCrush.setSelected(args.enablePngCrush);\n            cbPostConvertWebp.setSelected(args.postConvertWebp);\n            cbEnableMozJpeg.setSelected(args.enableMozJpeg);\n            cbKeepUnoptimized.setSelected(args.keepUnoptimizedFilesPostProcessor);\n            cbIosCreateImageset.setSelected(args.iosCreateImagesetFolders);\n            cbCleanBeforeConvert.setSelected(args.clearDirBeforeConvert);\n            rbOptAdvanced.setSelected(args.guiAdvancedOptions);\n            rbOptSimple.setSelected(!args.guiAdvancedOptions);\n\n        }\n    }\n\n    "
        },
        {
            "sender": "PerformanceSensitivity",
            "content": "The configuration is Performance Insensitive: The `createMipMapInsteadOfDrawableDir` configuration primarily affects the directory prefix used in the creation of Android density descriptors. While it influences the output structure, it does not directly lead to time-intensive or memory-intensive operations. The operations involved in adding descriptors to the list are straightforward and do not involve significant computational or memory overhead. Therefore, this configuration does not have a substantial impact on system-level performance."
        }
    ]
}