Method,Called_Method,function,option,Method_short,path,class_name,xml_path,Method_body
M:at.favre.tools.dconvert.WorkerHandler$InternalCallback:onJobFinished(at.favre.tools.dconvert.converters.Result),(M)at.favre.tools.dconvert.arg.Arguments:isHaltOnError(),at.favre.tools.dconvert.arg.Arguments:isHaltOnError(),haltOnError,onJobFinished,/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/density-converter/src/main/java/at/favre/tools/dconvert/WorkerHandler.java,WorkerHandler$InternalCallback,../data/xml/dconverter/WorkerHandler.xml,"synchronized void onJobFinished(Result result) {
            if (!canceled) {
                currentJobCount++;

                if (result != null) {
                    if (result.log != null && result.log.length() > 0) {
                        logBuilder.append(result.log).append(""\n"");
                    }
                    if (result.processedFiles != null) {
                        files.addAll(result.processedFiles);
                    }
                    if (result.exception != null) {
                        exceptionList.add(result.exception);

                        if (arguments.haltOnError) {
                            canceled = true;
                            threadPool.shutdownNow();
                            callback.onFinished(currentJobCount, files, logBuilder, exceptionList, true);
                        }
                    }
                }

                if (!canceled) {
                    if (currentJobCount == jobCount) {
                        callback.onFinished(currentJobCount, files, logBuilder, exceptionList, false);
                    } else {
                        callback.onProgress((float) currentJobCount / (float) jobCount);
                    }
                }
            }
        }
    }"
M:at.favre.tools.dconvert.ui.GUIController:loadPrefs(),(M)at.favre.tools.dconvert.arg.Arguments:isHaltOnError(),at.favre.tools.dconvert.arg.Arguments:isHaltOnError(),haltOnError,loadPrefs,/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/density-converter/src/main/java/at/favre/tools/dconvert/ui/GUIController.java,GUIController,../data/xml/dconverter/GUIController.xml,"private void loadPrefs() {
        Arguments args = preferenceStore.get();
        if (args != null) {
            textFieldSrcPath.setText(args.src != null ? args.src.getAbsolutePath() : """");
            textFieldDstPath.setText(args.dst != null ? args.dst.getAbsolutePath() : """");

            scaleSlider.setValue(Arguments.DEFAULT_SCALE);
            textFieldDp.setText(String.valueOf((int) args.scale));

            if (args.scaleMode == EScaleMode.FACTOR) {
                rbFactor.setSelected(true);
                scaleSlider.setValue(args.scale);
                textFieldDp.setText("""");
            } else if (args.scaleMode == EScaleMode.DP_WIDTH) {
                rbDpWidth.setSelected(true);
            } else if (args.scaleMode == EScaleMode.DP_HEIGHT) {
                rbDpHeight.setSelected(true);
            }

            setPlatformToogles(args.platform);
            choiceCompression.getSelectionModel().select(args.outputCompressionMode);
            choiceCompressionQuality.getSelectionModel().select(toJpgQ(args.compressionQuality));
            choiceRounding.getSelectionModel().select(args.roundingHandler);
            choiceThreads.getSelectionModel().select(Integer.valueOf(args.threadCount));
            choiceDownScale.getSelectionModel().select(args.downScalingAlgorithm);
            choiceUpScale.getSelectionModel().select(args.upScalingAlgorithm);

            cbSkipExisting.setSelected(args.skipExistingFiles);
            cbSkipUpscaling.setSelected(args.skipUpscaling);
            cbAndroidIncludeLdpiTvdpi.setSelected(args.includeAndroidLdpiTvdpi);
            cbAntiAliasing.setSelected(args.enableAntiAliasing);
            cbMipmapInsteadDrawable.setSelected(args.createMipMapInsteadOfDrawableDir);
            cbHaltOnError.setSelected(args.haltOnError);
            cbDryRun.setSelected(args.dryRun);
            cbEnablePngCrush.setSelected(args.enablePngCrush);
            cbPostConvertWebp.setSelected(args.postConvertWebp);
            cbEnableMozJpeg.setSelected(args.enableMozJpeg);
            cbKeepUnoptimized.setSelected(args.keepUnoptimizedFilesPostProcessor);
            cbIosCreateImageset.setSelected(args.iosCreateImagesetFolders);
            cbCleanBeforeConvert.setSelected(args.clearDirBeforeConvert);
            rbOptAdvanced.setSelected(args.guiAdvancedOptions);
            rbOptSimple.setSelected(!args.guiAdvancedOptions);

        }
    }

    "
