Method,Called_Method,function,option,Method_short,path,class_name,xml_path,Method_body
M:org.apache.cassandra.service.StorageProxy:getHintedHandoffEnabled(),(S)org.apache.cassandra.config.DatabaseDescriptor:hintedHandoffEnabled(),org.apache.cassandra.config.DatabaseDescriptor:hintedHandoffEnabled(),hinted_handoff_enabled,getHintedHandoffEnabled,/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/service/StorageProxy.java,StorageProxy,../data/xml/cassandra/StorageProxy.xml,"public boolean getHintedHandoffEnabled()
    {
        return DatabaseDescriptor.hintedHandoffEnabled();
    }

    "
M:org.apache.cassandra.service.StorageProxy:shouldHint(org.apache.cassandra.locator.Replica),(S)org.apache.cassandra.config.DatabaseDescriptor:hintedHandoffEnabled(),org.apache.cassandra.config.DatabaseDescriptor:hintedHandoffEnabled(),hinted_handoff_enabled,shouldHint,/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/service/StorageProxy.java,StorageProxy,../data/xml/cassandra/StorageProxy.xml,"public static boolean shouldHint(Replica replica)
    {
        if (!DatabaseDescriptor.hintedHandoffEnabled())
            return false;
        if (replica.isTransient() || replica.isSelf())
            return false;

        Set<String> disabledDCs = DatabaseDescriptor.hintedHandoffDisabledDCs();
        if (!disabledDCs.isEmpty())
        {
            final String dc = DatabaseDescriptor.getEndpointSnitch().getDatacenter(replica);
            if (disabledDCs.contains(dc))
            {
                Tracing.trace(""Not hinting {} since its data center {} has been disabled {}"", replica, dc, disabledDCs);
                return false;
            }
        }
        boolean hintWindowExpired = Gossiper.instance.getEndpointDowntime(replica.endpoint()) > DatabaseDescriptor.getMaxHintWindow();
        if (hintWindowExpired)
        {
            HintsService.instance.metrics.incrPastWindow(replica.endpoint());
            Tracing.trace(""Not hinting {} which has been down {} ms"", replica, Gossiper.instance.getEndpointDowntime(replica.endpoint()));
        }
        return !hintWindowExpired;
    }

    "
