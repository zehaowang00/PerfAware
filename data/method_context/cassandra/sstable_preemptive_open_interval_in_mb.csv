Method,Called_Method,function,option,Method_short,path,class_name,xml_path,Method_body
M:org.apache.cassandra.io.sstable.SSTableRewriter:calculateOpenInterval(boolean),(S)org.apache.cassandra.config.DatabaseDescriptor:getSSTablePreemptiveOpenIntervalInMB(),org.apache.cassandra.config.DatabaseDescriptor:getSSTablePreemptiveOpenIntervalInMB(),sstable_preemptive_open_interval_in_mb,calculateOpenInterval,/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/io/sstable/SSTableRewriter.java,SSTableRewriter,../data/xml/cassandra/SSTableRewriter.xml,"private static long calculateOpenInterval(boolean shouldOpenEarly)
    {
        long interval = DatabaseDescriptor.getSSTablePreemptiveOpenIntervalInMB() * (1L << 20);
        if (disableEarlyOpeningForTests || !shouldOpenEarly || interval < 0)
            interval = Long.MAX_VALUE;
        return interval;
    }

    "
M:org.apache.cassandra.service.StorageService:getSSTablePreemptiveOpenIntervalInMB(),(S)org.apache.cassandra.config.DatabaseDescriptor:getSSTablePreemptiveOpenIntervalInMB(),org.apache.cassandra.config.DatabaseDescriptor:getSSTablePreemptiveOpenIntervalInMB(),sstable_preemptive_open_interval_in_mb,getSSTablePreemptiveOpenIntervalInMB,/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/service/StorageService.java,StorageService,../data/xml/cassandra/StorageService.xml,"public int getSSTablePreemptiveOpenIntervalInMB()
    {
        return DatabaseDescriptor.getSSTablePreemptiveOpenIntervalInMB();
    }

    "
