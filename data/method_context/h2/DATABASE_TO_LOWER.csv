Method,Called_Method,function,Method_body,option,Method_short,path,class_name,xml_path
M:org.h2.expression.function.CurrentGeneralValueSpecification:getValue(org.h2.engine.SessionLocal),(M)org.h2.engine.Database:getSettings(),org.h2.engine.Database:getSettings(),"@Override
    public Value getValue(SessionLocal session) {
        String s;
        switch (specification) {
        case CURRENT_CATALOG:
            s = session.getDatabase().getShortName();
            break;
        case CURRENT_PATH: {
            String[] searchPath = session.getSchemaSearchPath();
            if (searchPath != null) {
                StringBuilder builder = new StringBuilder();
                for (int i = 0; i < searchPath.length; i++) {
                    if (i > 0) {
                        builder.append(',');
                    }
                    ParserUtil.quoteIdentifier(builder, searchPath[i], HasSQL.DEFAULT_SQL_FLAGS);
                }
                s = builder.toString();
            } else {
                s = """";
            }
            break;
        }
        case CURRENT_ROLE: {
            Database db = session.getDatabase();
            s = db.getPublicRole().getName();
            if (db.getSettings().databaseToLower) {
                s = StringUtils.toLowerEnglish(s);
            }
            break;
        }
        case CURRENT_SCHEMA:
            s = session.getCurrentSchemaName();
            break;
        case CURRENT_USER:
        case SESSION_USER:
        case SYSTEM_USER:
            s = session.getUser().getName();
            if (session.getDatabase().getSettings().databaseToLower) {
                s = StringUtils.toLowerEnglish(s);
            }
            break;
        default:
            throw DbException.getInternalError(""specification="" + specification);
        }
        return s != null ? ValueVarchar.get(s, session) : ValueNull.INSTANCE;
    }

    ",DATABASE_TO_LOWER,getValue,/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/h2database/h2/src/main/org/h2/expression/function/CurrentGeneralValueSpecification.java,CurrentGeneralValueSpecification,../data/xml/h2/CurrentGeneralValueSpecification.xml
M:org.h2.table.MetaTable:identifier(java.lang.String),(M)org.h2.engine.Database:getSettings(),org.h2.engine.Database:getSettings(),"/**
     * If needed, convert the identifier to lower case.
     *
     * @param s the identifier to convert
     * @return the converted identifier
     */
protected final String identifier(String s) {
        if (database.getSettings().databaseToLower) {
            s = s == null ? null : StringUtils.toLowerEnglish(s);
        }
        return s;
    }

    ",DATABASE_TO_LOWER,identifier,/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/h2database/h2/src/main/org/h2/table/MetaTable.java,MetaTable,../data/xml/h2/MetaTable.xml
"M:org.h2.mode.FunctionsPostgreSQL:getUserbyid(org.h2.engine.SessionLocal,int)",(M)org.h2.engine.Database:getSettings(),org.h2.engine.Database:getSettings(),"private static String getUserbyid(SessionLocal session, int uid) {
        User u = session.getUser();
        String name;
        search: {
            if (u.getId() == uid) {
                name = u.getName();
                break search;
            } else {
                if (u.isAdmin()) {
                    for (RightOwner rightOwner : session.getDatabase().getAllUsersAndRoles()) {
                        if (rightOwner.getId() == uid) {
                            name = rightOwner.getName();
                            break search;
                        }
                    }
                }
            }
            return ""unknown (OID="" + uid + ')';
        }
        if (session.getDatabase().getSettings().databaseToLower) {
            name = StringUtils.toLowerEnglish(name);
        }
        return name;
    }

    ",DATABASE_TO_LOWER,getUserbyid,/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/h2database/h2/src/main/org/h2/mode/FunctionsPostgreSQL.java,FunctionsPostgreSQL,../data/xml/h2/FunctionsPostgreSQL.xml
